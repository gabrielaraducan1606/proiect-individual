{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\DiaryDateCalendar\\\\DiaryDateCalendar.jsx\";\nimport React from \"react\";\nimport styles from \"./DiaryDateCalendar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = date => {\n  if (!(date instanceof Date) || isNaN(date)) return \"\"; // ✅ Ensure it's a valid Date\n  return date.toISOString().split(\"T\")[0]; // ✅ Format as \"YYYY-MM-DD\"\n};\nconst DiaryDateCalendar = ({\n  selectedDate,\n  setSelectedDate\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calendarContainer,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: formatDate(selectedDate) // ✅ Use formatted date\n      ,\n      onChange: e => setSelectedDate(new Date(e.target.value)) // ✅ Convert back to Date object\n      ,\n      className: styles.datePicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = DiaryDateCalendar;\nexport default DiaryDateCalendar;\nvar _c;\n$RefreshReg$(_c, \"DiaryDateCalendar\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","formatDate","date","Date","isNaN","toISOString","split","DiaryDateCalendar","selectedDate","setSelectedDate","className","calendarContainer","children","type","value","onChange","e","target","datePicker","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/DiaryDateCalendar/DiaryDateCalendar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./DiaryDateCalendar.module.css\";\r\n\r\nconst formatDate = (date) => {\r\n    if (!(date instanceof Date) || isNaN(date)) return \"\"; // ✅ Ensure it's a valid Date\r\n    return date.toISOString().split(\"T\")[0]; // ✅ Format as \"YYYY-MM-DD\"\r\n};\r\n\r\nconst DiaryDateCalendar = ({ selectedDate, setSelectedDate }) => {\r\n    return (\r\n        <div className={styles.calendarContainer}>\r\n            <input\r\n                type=\"date\"\r\n                value={formatDate(selectedDate)} // ✅ Use formatted date\r\n                onChange={(e) => setSelectedDate(new Date(e.target.value))} // ✅ Convert back to Date object\r\n                className={styles.datePicker}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiaryDateCalendar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,UAAU,GAAIC,IAAI,IAAK;EACzB,IAAI,EAAEA,IAAI,YAAYC,IAAI,CAAC,IAAIC,KAAK,CAACF,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;EACvD,OAAOA,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAC7D,oBACIT,OAAA;IAAKU,SAAS,EAAEZ,MAAM,CAACa,iBAAkB;IAAAC,QAAA,eACrCZ,OAAA;MACIa,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,UAAU,CAACO,YAAY,CAAE,CAAC;MAAA;MACjCO,QAAQ,EAAGC,CAAC,IAAKP,eAAe,CAAC,IAAIN,IAAI,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE,CAAC;MAAA;MAC5DJ,SAAS,EAAEZ,MAAM,CAACoB;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAXIhB,iBAAiB;AAavB,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}