{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\pages\\\\CalculatorPage\\\\CalculatorPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setDailyCalories } from \"../../redux/caloriesSlice\"; // ðŸ”¥ Import Redux action\nimport styles from \"./CalculatorPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorPage = () => {\n  _s();\n  const [height, setHeight] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [currentWeight, setCurrentWeight] = useState(\"\");\n  const [desiredWeight, setDesiredWeight] = useState(\"\");\n  const [bloodType, setBloodType] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const dispatch = useDispatch();\n\n  // âœ… Get `selectedDate` from Redux (this is updated in `DiaryPage.jsx`)\n  const selectedDate = useSelector(state => state.calories.selectedDate) || new Date();\n  const formattedDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n  const calculateCalories = async e => {\n    e.preventDefault();\n    setError(\"\");\n    if (!height || !age || !currentWeight || !desiredWeight || !bloodType) {\n      setError(\"Please fill in all fields!\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/calories\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          height,\n          age,\n          weight: currentWeight,\n          desiredWeight,\n          bloodType\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"Calculation failed\");\n      }\n      console.log(\"âœ… Dispatching setDailyCalories for\", formattedDate, \"Calories:\", data.dailyCalories);\n      dispatch(setDailyCalories({\n        date: formattedDate,\n        calories: data.dailyCalories\n      }));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calculatorPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Calculate your daily calorie intake right now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.formContainer,\n      onSubmit: calculateCalories,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Height (cm) *\",\n          value: height,\n          onChange: e => setHeight(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Age *\",\n          value: age,\n          onChange: e => setAge(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Current weight *\",\n          value: currentWeight,\n          onChange: e => setCurrentWeight(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Desired weight *\",\n          value: desiredWeight,\n          onChange: e => setDesiredWeight(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.bloodTypeContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.bloodTypeLabel,\n            children: \"Blood Type*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: styles.bloodTypeOptions,\n            children: [1, 2, 3, 4].map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"bloodType\",\n                value: type,\n                checked: bloodType === String(type),\n                onChange: e => setBloodType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this)]\n            }, type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Start losing weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.errorMessage,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(CalculatorPage, \"4GfsFt6jBz8HMS+yJPw/z+z72AU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CalculatorPage;\nexport default CalculatorPage;\nvar _c;\n$RefreshReg$(_c, \"CalculatorPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setDailyCalories","styles","jsxDEV","_jsxDEV","CalculatorPage","_s","height","setHeight","age","setAge","currentWeight","setCurrentWeight","desiredWeight","setDesiredWeight","bloodType","setBloodType","error","setError","dispatch","selectedDate","state","calories","Date","formattedDate","toISOString","split","calculateCalories","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","weight","data","json","ok","Error","message","console","log","dailyCalories","date","className","calculatorPage","children","title","fileName","_jsxFileName","lineNumber","columnNumber","formContainer","onSubmit","leftColumn","type","placeholder","value","onChange","target","inputField","rightColumn","bloodTypeContainer","bloodTypeLabel","bloodTypeOptions","map","name","checked","String","submitButton","errorMessage","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/pages/CalculatorPage/CalculatorPage.jsx"],"sourcesContent":["import React, { useState } from \"react\"; \r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDailyCalories } from \"../../redux/caloriesSlice\"; // ðŸ”¥ Import Redux action\r\nimport styles from \"./CalculatorPage.module.css\";\r\n\r\nconst CalculatorPage = () => {\r\n    const [height, setHeight] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [currentWeight, setCurrentWeight] = useState(\"\");\r\n    const [desiredWeight, setDesiredWeight] = useState(\"\");\r\n    const [bloodType, setBloodType] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    // âœ… Get `selectedDate` from Redux (this is updated in `DiaryPage.jsx`)\r\n    const selectedDate = useSelector((state) => state.calories.selectedDate) || new Date();\r\n    const formattedDate = new Date(selectedDate).toISOString().split(\"T\")[0]; \r\n\r\n    const calculateCalories = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n\r\n        if (!height || !age || !currentWeight || !desiredWeight || !bloodType) {\r\n            setError(\"Please fill in all fields!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/calories\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ height, age, weight: currentWeight, desiredWeight, bloodType }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message || \"Calculation failed\");\r\n            }\r\n\r\n            console.log(\"âœ… Dispatching setDailyCalories for\", formattedDate, \"Calories:\", data.dailyCalories);\r\n            dispatch(setDailyCalories({ date: formattedDate, calories: data.dailyCalories }));\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.calculatorPage}>\r\n            <h1 className={styles.title}>Calculate your daily calorie intake right now</h1>\r\n            \r\n            {/* âœ… Form stays the same with correct classNames */}\r\n            <form className={styles.formContainer} onSubmit={calculateCalories}>\r\n                <div className={styles.leftColumn}>\r\n                    <input \r\n                        type=\"number\" \r\n                        placeholder=\"Height (cm) *\" \r\n                        value={height} \r\n                        onChange={(e) => setHeight(e.target.value)} \r\n                        className={styles.inputField} \r\n                    />\r\n                    <input \r\n                        type=\"number\" \r\n                        placeholder=\"Age *\" \r\n                        value={age} \r\n                        onChange={(e) => setAge(e.target.value)} \r\n                        className={styles.inputField} \r\n                    />\r\n                    <input \r\n                        type=\"number\" \r\n                        placeholder=\"Current weight *\" \r\n                        value={currentWeight} \r\n                        onChange={(e) => setCurrentWeight(e.target.value)} \r\n                        className={styles.inputField} \r\n                    />\r\n                </div>\r\n\r\n                <div className={styles.rightColumn}>\r\n                    <input \r\n                        type=\"number\" \r\n                        placeholder=\"Desired weight *\" \r\n                        value={desiredWeight} \r\n                        onChange={(e) => setDesiredWeight(e.target.value)} \r\n                        className={styles.inputField} \r\n                    />\r\n\r\n                    {/* âœ… Blood Type remains unchanged */}\r\n                    <div className={styles.bloodTypeContainer}>\r\n                        <label className={styles.bloodTypeLabel}>Blood Type*</label>\r\n                        <ul className={styles.bloodTypeOptions}>\r\n                            {[1, 2, 3, 4].map((type) => (\r\n                                <li key={type}>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        name=\"bloodType\" \r\n                                        value={type} \r\n                                        checked={bloodType === String(type)} \r\n                                        onChange={(e) => setBloodType(e.target.value)} \r\n                                    />\r\n                                    <span>{type}</span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className={styles.submitButton}>\r\n                    Start losing weight\r\n                </button>\r\n            </form>\r\n\r\n            {/* âœ… Error message */}\r\n            {error && <p className={styles.errorMessage}>{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalculatorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}