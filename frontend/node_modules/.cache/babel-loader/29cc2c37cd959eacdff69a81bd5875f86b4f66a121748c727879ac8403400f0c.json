{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\pages\\\\DiaryPage\\\\DiaryPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeConsumedFood } from \"../../redux/caloriesSlice\"; // ✅ Only import what's used\nimport DiaryDateCalendar from \"../../components/DiaryDateCalendar/DiaryDateCalendar\";\nimport DiaryAddProductForm from \"../../components/DiaryAddProductForm/DiaryAddProductForm\";\nimport DiaryProductsList from \"../../components/DiaryProductsList/DiaryProductsList\";\nimport Summary from \"../../components/Summary/Summary\";\nimport styles from \"./DiaryPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // ✅ Format date as dd.mm.yyyy\n  const formattedDate = `${String(selectedDate.getDate()).padStart(2, \"0\")}.${String(selectedDate.getMonth() + 1).padStart(2, \"0\")}.${selectedDate.getFullYear()}`;\n\n  // ✅ Get stored foods for the selected date\n  const consumedFoods = useSelector(state => state.calories.consumedFoods[formattedDate] || []);\n\n  // ✅ Handle food deletion\n  const handleDeleteFood = index => {\n    dispatch(removeConsumedFood({\n      date: formattedDate,\n      index\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.diaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(DiaryDateCalendar, {\n      selectedDate: selectedDate,\n      setSelectedDate: setSelectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DiaryAddProductForm, {\n      selectedDate: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DiaryProductsList, {\n      consumedFoods: consumedFoods,\n      onDeleteFood: handleDeleteFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Summary, {\n      selectedDate: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryPage, \"zaTftQBxnVZDLxQUIkFtLZM8FCM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DiaryPage;\nexport default DiaryPage;\nvar _c;\n$RefreshReg$(_c, \"DiaryPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","removeConsumedFood","DiaryDateCalendar","DiaryAddProductForm","DiaryProductsList","Summary","styles","jsxDEV","_jsxDEV","DiaryPage","_s","dispatch","selectedDate","setSelectedDate","Date","formattedDate","String","getDate","padStart","getMonth","getFullYear","consumedFoods","state","calories","handleDeleteFood","index","date","className","diaryContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","onDeleteFood","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeConsumedFood } from \"../../redux/caloriesSlice\"; // ✅ Only import what's used\r\nimport DiaryDateCalendar from \"../../components/DiaryDateCalendar/DiaryDateCalendar\";\r\nimport DiaryAddProductForm from \"../../components/DiaryAddProductForm/DiaryAddProductForm\";\r\nimport DiaryProductsList from \"../../components/DiaryProductsList/DiaryProductsList\";\r\nimport Summary from \"../../components/Summary/Summary\";\r\nimport styles from \"./DiaryPage.module.css\";\r\n\r\nconst DiaryPage = () => {\r\n    const dispatch = useDispatch();\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n    // ✅ Format date as dd.mm.yyyy\r\n    const formattedDate = `${String(selectedDate.getDate()).padStart(2, \"0\")}.${String(selectedDate.getMonth() + 1).padStart(2, \"0\")}.${selectedDate.getFullYear()}`;\r\n\r\n    // ✅ Get stored foods for the selected date\r\n    const consumedFoods = useSelector((state) => state.calories.consumedFoods[formattedDate] || []);\r\n\r\n    // ✅ Handle food deletion\r\n    const handleDeleteFood = (index) => {\r\n        dispatch(removeConsumedFood({ date: formattedDate, index }));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.diaryContainer}>\r\n            <DiaryDateCalendar selectedDate={selectedDate} setSelectedDate={setSelectedDate} />\r\n            <DiaryAddProductForm selectedDate={formattedDate} />\r\n            <DiaryProductsList consumedFoods={consumedFoods} onDeleteFood={handleDeleteFood} />\r\n            <Summary selectedDate={formattedDate} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiaryPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,2BAA2B,CAAC,CAAC;AAChE,OAAOC,iBAAiB,MAAM,sDAAsD;AACpF,OAAOC,mBAAmB,MAAM,0DAA0D;AAC1F,OAAOC,iBAAiB,MAAM,sDAAsD;AACpF,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAIgB,IAAI,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMC,aAAa,GAAG,GAAGC,MAAM,CAACJ,YAAY,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACJ,YAAY,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIN,YAAY,CAACQ,WAAW,CAAC,CAAC,EAAE;;EAEhK;EACA,MAAMC,aAAa,GAAGrB,WAAW,CAAEsB,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACF,aAAa,CAACN,aAAa,CAAC,IAAI,EAAE,CAAC;;EAE/F;EACA,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAChCd,QAAQ,CAACV,kBAAkB,CAAC;MAAEyB,IAAI,EAAEX,aAAa;MAAEU;IAAM,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,oBACIjB,OAAA;IAAKmB,SAAS,EAAErB,MAAM,CAACsB,cAAe;IAAAC,QAAA,gBAClCrB,OAAA,CAACN,iBAAiB;MAACU,YAAY,EAAEA,YAAa;MAACC,eAAe,EAAEA;IAAgB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnFzB,OAAA,CAACL,mBAAmB;MAACS,YAAY,EAAEG;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpDzB,OAAA,CAACJ,iBAAiB;MAACiB,aAAa,EAAEA,aAAc;MAACa,YAAY,EAAEV;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnFzB,OAAA,CAACH,OAAO;MAACO,YAAY,EAAEG;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAACvB,EAAA,CAvBID,SAAS;EAAA,QACMV,WAAW,EAONC,WAAW;AAAA;AAAAmC,EAAA,GAR/B1B,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}