{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\DiaryAddProductForm\\\\DiaryAddProductForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addConsumedFood } from \"../../redux/caloriesSlice\";\nimport productsData from \"../../data/products.json\";\nimport styles from \"./DiaryAddProductForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryAddProductForm = ({\n  selectedDate\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [calories, setCalories] = useState(0);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    if (product.length > 0) {\n      const filtered = productsData.filter(p => p.title.toLowerCase().includes(product.toLowerCase()));\n      setFilteredProducts(filtered);\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [product]);\n  const handleSelectProduct = selectedProduct => {\n    setProduct(selectedProduct.title);\n    setCalories(selectedProduct.calories);\n    setFilteredProducts([]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!product || !weight) return;\n    const totalCalories = weight / 100 * calories;\n    const formattedDate = formatDate(selectedDate); // ✅ Aplică formatul dd.mm.yyyy\n\n    dispatch(addConsumedFood({\n      date: formattedDate,\n      // ✅ Salvăm în formatul corect\n      name: product,\n      weight: Number(weight),\n      calories: totalCalories\n    }));\n    setProduct(\"\");\n    setWeight(\"\");\n    setCalories(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter food name\",\n          value: product,\n          onChange: e => setProduct(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), filteredProducts.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.suggestions,\n          children: filteredProducts.slice(0, 5).map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectProduct(p),\n            children: [p.title, \" (\", p.calories, \" kcal/100g)\"]\n          }, p._id.$oid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Grams\",\n          value: weight,\n          onChange: e => setWeight(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.submitButton,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryAddProductForm, \"+ClA8QIQzbXdvmHlJZ9fzJb4Tu8=\", false, function () {\n  return [useDispatch];\n});\n_c = DiaryAddProductForm;\nexport default DiaryAddProductForm;\nvar _c;\n$RefreshReg$(_c, \"DiaryAddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","addConsumedFood","productsData","styles","jsxDEV","_jsxDEV","DiaryAddProductForm","selectedDate","_s","dispatch","product","setProduct","weight","setWeight","calories","setCalories","filteredProducts","setFilteredProducts","length","filtered","filter","p","title","toLowerCase","includes","handleSelectProduct","selectedProduct","handleSubmit","e","preventDefault","totalCalories","formattedDate","formatDate","date","name","Number","className","formContainer","children","onSubmit","inputGroup","type","placeholder","value","onChange","target","inputField","fileName","_jsxFileName","lineNumber","columnNumber","suggestions","slice","map","onClick","_id","$oid","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addConsumedFood } from \"../../redux/caloriesSlice\";\r\nimport productsData from \"../../data/products.json\";\r\nimport styles from \"./DiaryAddProductForm.module.css\";\r\n\r\nconst DiaryAddProductForm = ({ selectedDate }) => {\r\n    const dispatch = useDispatch();\r\n    const [product, setProduct] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [calories, setCalories] = useState(0);\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (product.length > 0) {\r\n            const filtered = productsData.filter((p) =>\r\n                p.title.toLowerCase().includes(product.toLowerCase())\r\n            );\r\n            setFilteredProducts(filtered);\r\n        } else {\r\n            setFilteredProducts([]);\r\n        }\r\n    }, [product]);\r\n\r\n    const handleSelectProduct = (selectedProduct) => {\r\n        setProduct(selectedProduct.title);\r\n        setCalories(selectedProduct.calories);\r\n        setFilteredProducts([]);\r\n    };\r\n\r\n   const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!product || !weight) return;\r\n\r\n    const totalCalories = (weight / 100) * calories;\r\n    const formattedDate = formatDate(selectedDate); // ✅ Aplică formatul dd.mm.yyyy\r\n\r\n    dispatch(addConsumedFood({\r\n        date: formattedDate, // ✅ Salvăm în formatul corect\r\n        name: product,\r\n        weight: Number(weight),\r\n        calories: totalCalories\r\n    }));\r\n\r\n    setProduct(\"\");\r\n    setWeight(\"\");\r\n    setCalories(0);\r\n};\r\n\r\n    return (\r\n        <div className={styles.formContainer}>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={styles.inputGroup}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter food name\"\r\n                        value={product}\r\n                        onChange={(e) => setProduct(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n                    {filteredProducts.length > 0 && (\r\n                        <ul className={styles.suggestions}>\r\n                            {filteredProducts.slice(0, 5).map((p) => (\r\n                                <li key={p._id.$oid} onClick={() => handleSelectProduct(p)}>\r\n                                    {p.title} ({p.calories} kcal/100g)\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Grams\"\r\n                        value={weight}\r\n                        onChange={(e) => setWeight(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n                    <button type=\"submit\" className={styles.submitButton}>+</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}