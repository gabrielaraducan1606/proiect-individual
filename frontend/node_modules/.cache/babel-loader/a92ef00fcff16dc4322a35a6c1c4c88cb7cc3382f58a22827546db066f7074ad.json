{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\Summary\\\\Summary.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./Summary.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFormattedDate = selectedDate => {\n  return selectedDate instanceof Date ? selectedDate.toISOString().split(\"T\")[0] : new Date(selectedDate).toISOString().split(\"T\")[0];\n};\nconst Summary = ({\n  selectedDate\n}) => {\n  _s();\n  const formattedDate = getFormattedDate(selectedDate);\n  const dailyCalories = useSelector(state => state.calories.dailyCalories);\n  const consumedFoods = useSelector(state => state.calories.consumedFoods[formattedDate] || []);\n  const consumedCalories = consumedFoods.reduce((total, food) => total + food.calories, 0);\n  const remainingCalories = dailyCalories - consumedCalories;\n  const percentageOfDailyIntake = dailyCalories > 0 ? (consumedCalories / dailyCalories * 100).toFixed(1) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.summaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.summaryTitle,\n      children: [\"Summary for \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.summaryList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), \" \", remainingCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Consumed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), \" \", consumedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Daily Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), \" \", dailyCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"% of normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), \" \", percentageOfDailyIntake, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Summary, \"DzdCAFO7zScKJO+FzKZ57Cdmjsw=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useSelector","styles","jsxDEV","_jsxDEV","getFormattedDate","selectedDate","Date","toISOString","split","Summary","_s","formattedDate","dailyCalories","state","calories","consumedFoods","consumedCalories","reduce","total","food","remainingCalories","percentageOfDailyIntake","toFixed","className","summaryContainer","children","summaryTitle","fileName","_jsxFileName","lineNumber","columnNumber","summaryList","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/Summary/Summary.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./Summary.module.css\";\r\n\r\nconst getFormattedDate = (selectedDate) => {\r\n    return selectedDate instanceof Date \r\n        ? selectedDate.toISOString().split(\"T\")[0] \r\n        : new Date(selectedDate).toISOString().split(\"T\")[0];\r\n};\r\n\r\nconst Summary = ({ selectedDate }) => {\r\n    const formattedDate = getFormattedDate(selectedDate);\r\n\r\n    const dailyCalories = useSelector((state) => state.calories.dailyCalories);\r\n    const consumedFoods = useSelector((state) => state.calories.consumedFoods[formattedDate] || []);\r\n    \r\n    const consumedCalories = consumedFoods.reduce((total, food) => total + food.calories, 0);\r\n    const remainingCalories = dailyCalories - consumedCalories;\r\n    const percentageOfDailyIntake = dailyCalories > 0 ? ((consumedCalories / dailyCalories) * 100).toFixed(1) : 0;\r\n\r\n    return (\r\n        <div className={styles.summaryContainer}>\r\n            <h3 className={styles.summaryTitle}>Summary for {formattedDate}</h3>\r\n            <ul className={styles.summaryList}>\r\n                <li><span>Left</span> {remainingCalories} kcal</li>\r\n                <li><span>Consumed</span> {consumedCalories} kcal</li>\r\n                <li><span>Daily Rate</span> {dailyCalories} kcal</li>\r\n                <li><span>% of normal</span> {percentageOfDailyIntake}%</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}