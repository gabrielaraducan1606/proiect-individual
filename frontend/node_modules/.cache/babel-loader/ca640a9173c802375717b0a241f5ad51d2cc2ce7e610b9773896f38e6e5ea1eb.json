{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\pages\\\\DiaryPage\\\\DiaryPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DiaryDateCalendar from \"../../components/DiaryDateCalendar/DiaryDateCalendar\";\nimport DiaryAddProductForm from \"../../components/DiaryAddProductForm/DiaryAddProductForm\";\nimport DiaryProductsList from \"../../components/DiaryProductsList/DiaryProductsList\";\nimport styles from \"./DiaryPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryPage = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [consumedFoods, setConsumedFoods] = useState([]);\n\n  // ✅ Load saved foods from local storage when date changes\n  useEffect(() => {\n    const savedFoods = JSON.parse(localStorage.getItem(`foods_${selectedDate.toISOString().split(\"T\")[0]}`)) || [];\n    setConsumedFoods(savedFoods);\n  }, [selectedDate]);\n\n  // ✅ Function to add food and save to local storage\n  const handleAddFood = food => {\n    const updatedFoods = [...consumedFoods, food];\n    setConsumedFoods(updatedFoods);\n\n    // ✅ Save to local storage\n    localStorage.setItem(`foods_${selectedDate.toISOString().split(\"T\")[0]}`, JSON.stringify(updatedFoods));\n  };\n\n  // ✅ Function to remove food\n  const handleRemoveFood = index => {\n    const updatedFoods = consumedFoods.filter((_, i) => i !== index);\n    setConsumedFoods(updatedFoods);\n\n    // ✅ Update local storage\n    localStorage.setItem(`foods_${selectedDate.toISOString().split(\"T\")[0]}`, JSON.stringify(updatedFoods));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.diaryContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leftContent,\n      children: [/*#__PURE__*/_jsxDEV(DiaryDateCalendar, {\n        selectedDate: selectedDate,\n        setSelectedDate: setSelectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DiaryAddProductForm, {\n        selectedDate: selectedDate,\n        onAddFood: handleAddFood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DiaryProductsList, {\n        consumedFoods: consumedFoods,\n        onDeleteFood: handleRemoveFood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryPage, \"ZmHMyBt1SvaRQV57P0oc6bkBcxo=\");\n_c = DiaryPage;\nexport default DiaryPage;\nvar _c;\n$RefreshReg$(_c, \"DiaryPage\");","map":{"version":3,"names":["React","useState","useEffect","DiaryDateCalendar","DiaryAddProductForm","DiaryProductsList","styles","jsxDEV","_jsxDEV","DiaryPage","_s","selectedDate","setSelectedDate","Date","consumedFoods","setConsumedFoods","savedFoods","JSON","parse","localStorage","getItem","toISOString","split","handleAddFood","food","updatedFoods","setItem","stringify","handleRemoveFood","index","filter","_","i","className","diaryContainer","children","leftContent","fileName","_jsxFileName","lineNumber","columnNumber","onAddFood","onDeleteFood","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DiaryDateCalendar from \"../../components/DiaryDateCalendar/DiaryDateCalendar\";\r\nimport DiaryAddProductForm from \"../../components/DiaryAddProductForm/DiaryAddProductForm\";\r\nimport DiaryProductsList from \"../../components/DiaryProductsList/DiaryProductsList\";\r\nimport styles from \"./DiaryPage.module.css\";\r\n\r\nconst DiaryPage = () => {\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [consumedFoods, setConsumedFoods] = useState([]);\r\n\r\n    // ✅ Load saved foods from local storage when date changes\r\n    useEffect(() => {\r\n        const savedFoods = JSON.parse(localStorage.getItem(`foods_${selectedDate.toISOString().split(\"T\")[0]}`)) || [];\r\n        setConsumedFoods(savedFoods);\r\n    }, [selectedDate]);\r\n\r\n    // ✅ Function to add food and save to local storage\r\n    const handleAddFood = (food) => {\r\n        const updatedFoods = [...consumedFoods, food];\r\n        setConsumedFoods(updatedFoods);\r\n\r\n        // ✅ Save to local storage\r\n        localStorage.setItem(`foods_${selectedDate.toISOString().split(\"T\")[0]}`, JSON.stringify(updatedFoods));\r\n    };\r\n\r\n    // ✅ Function to remove food\r\n    const handleRemoveFood = (index) => {\r\n        const updatedFoods = consumedFoods.filter((_, i) => i !== index);\r\n        setConsumedFoods(updatedFoods);\r\n\r\n        // ✅ Update local storage\r\n        localStorage.setItem(`foods_${selectedDate.toISOString().split(\"T\")[0]}`, JSON.stringify(updatedFoods));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.diaryContainer}>\r\n            <div className={styles.leftContent}>\r\n                <DiaryDateCalendar selectedDate={selectedDate} setSelectedDate={setSelectedDate} />\r\n                <DiaryAddProductForm selectedDate={selectedDate} onAddFood={handleAddFood} />\r\n                <DiaryProductsList consumedFoods={consumedFoods} onDeleteFood={handleRemoveFood} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiaryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}