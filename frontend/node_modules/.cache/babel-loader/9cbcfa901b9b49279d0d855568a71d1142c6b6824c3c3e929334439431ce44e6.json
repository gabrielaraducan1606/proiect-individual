{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\Summary\\\\Summary.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport productsData from \"../../data/products.json\"; // ✅ Importăm produsele\nimport styles from \"./Summary.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summary = ({\n  selectedDate\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    dailyCaloriesByDate = {},\n    consumedFoods = {}\n  } = useSelector(state => state.calories);\n  const {\n    user\n  } = useSelector(state => state.user); // ✅ Preluăm grupa de sânge a utilizatorului\n\n  const [forbiddenFoods, setForbiddenFoods] = useState([]); // ✅ Stocăm produsele interzise local\n  const [calories, setCalories] = useState(null);\n  let dateObject = selectedDate instanceof Date && !isNaN(selectedDate) ? selectedDate : new Date();\n  const formattedDate = dateObject.toISOString().split(\"T\")[0];\n  useEffect(() => {\n    console.log(\"📌 [Summary] Selected Date:\", formattedDate);\n    console.log(\"📌 [Summary] Daily Calories:\", dailyCaloriesByDate[formattedDate] || 0);\n    console.log(\"📌 [Summary] Consumed Calories:\", (consumedFoods[formattedDate] || []).reduce((total, food) => total + food.calories, 0));\n    console.log(\"🔎 [Redux] User Data:\", user);\n    console.log(\"📦 [Fetched Products]\", productsData);\n    if (user !== null && user !== void 0 && user.bloodType) {\n      const bloodIndex = parseInt(user.bloodType, 10);\n      console.log(\"🩸 Blood Type:\", bloodIndex);\n      if (!isNaN(bloodIndex) && bloodIndex >= 1 && bloodIndex <= 4) {\n        const filteredProducts = productsData.filter(product => product.groupBloodNotAllowed[bloodIndex] === true);\n        console.log(\"🚫 Forbidden Foods Calculated:\", filteredProducts);\n        setForbiddenFoods(filteredProducts);\n      } else {\n        console.warn(\"⚠️ Invalid blood type:\", user.bloodType);\n      }\n    } else {\n      console.warn(\"⚠️ User blood type is missing!\");\n    }\n    setCalories(dailyCaloriesByDate[formattedDate] || 0);\n  }, [formattedDate, dailyCaloriesByDate, consumedFoods, user]);\n  const dailyCalories = dailyCaloriesByDate[formattedDate] || 0;\n  const consumedCalories = (consumedFoods[formattedDate] || []).reduce((total, food) => total + food.calories, 0);\n  const remainingCalories = Math.max(dailyCalories - consumedCalories, 0);\n  const percentageOfDailyIntake = dailyCalories > 0 ? (consumedCalories / dailyCalories * 100).toFixed(1) : 0;\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.summaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.summaryHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.navButton,\n        onClick: () => navigate(\"/summary\"),\n        children: \"Nic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.verticalBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.logoutButton,\n        onClick: handleLogout,\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.summaryTitle,\n      children: [\"Summary for \", dateObject.toLocaleDateString(\"ro-RO\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.summaryList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), \" \", remainingCalories.toFixed(2), \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Consumed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), \" \", consumedCalories.toFixed(2), \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Daily rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), \" \", dailyCalories.toFixed(2), \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"% of normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), \" \", percentageOfDailyIntake, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.forbiddenFoodsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your recommended daily calorie intake is\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.caloriesNumber,\n        children: [calories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: styles.modalDivider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.title2,\n        children: \"Foods you should avoid:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: styles.forbiddenList,\n        children: forbiddenFoods.length > 0 ? forbiddenFoods.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [index + 1, \". \", food.title]\n        }, food._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No restricted foods found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Summary, \"8QgJMH+yNIa2eXMzSnSuAAgBcKk=\", false, function () {\n  return [useNavigate, useSelector, useSelector];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useNavigate","productsData","styles","jsxDEV","_jsxDEV","Summary","selectedDate","_s","navigate","dailyCaloriesByDate","consumedFoods","state","calories","user","forbiddenFoods","setForbiddenFoods","setCalories","dateObject","Date","isNaN","formattedDate","toISOString","split","console","log","reduce","total","food","bloodType","bloodIndex","parseInt","filteredProducts","filter","product","groupBloodNotAllowed","warn","dailyCalories","consumedCalories","remainingCalories","Math","max","percentageOfDailyIntake","toFixed","handleLogout","localStorage","removeItem","className","summaryContainer","children","summaryHeader","navButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","verticalBar","logoutButton","summaryTitle","toLocaleDateString","summaryList","forbiddenFoodsContainer","caloriesNumber","modalDivider","title2","forbiddenList","length","map","index","title","_id","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/Summary/Summary.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport productsData from \"../../data/products.json\"; // ✅ Importăm produsele\r\nimport styles from \"./Summary.module.css\";\r\n\r\nconst Summary = ({ selectedDate }) => {\r\n    const navigate = useNavigate();\r\n    const { dailyCaloriesByDate = {}, consumedFoods = {} } = useSelector((state) => state.calories);\r\n    const { user } = useSelector((state) => state.user); // ✅ Preluăm grupa de sânge a utilizatorului\r\n\r\n    const [forbiddenFoods, setForbiddenFoods] = useState([]); // ✅ Stocăm produsele interzise local\r\n    const [calories, setCalories] = useState(null);\r\n\r\n    let dateObject = selectedDate instanceof Date && !isNaN(selectedDate) ? selectedDate : new Date();\r\n    const formattedDate = dateObject.toISOString().split(\"T\")[0];\r\n\r\n    useEffect(() => {\r\n        console.log(\"📌 [Summary] Selected Date:\", formattedDate);\r\n        console.log(\"📌 [Summary] Daily Calories:\", dailyCaloriesByDate[formattedDate] || 0);\r\n        console.log(\"📌 [Summary] Consumed Calories:\", (consumedFoods[formattedDate] || []).reduce((total, food) => total + food.calories, 0));\r\n        \r\n        console.log(\"🔎 [Redux] User Data:\", user);\r\n        console.log(\"📦 [Fetched Products]\", productsData);\r\n        \r\n        if (user?.bloodType) {\r\n            const bloodIndex = parseInt(user.bloodType, 10);\r\n            console.log(\"🩸 Blood Type:\", bloodIndex);\r\n    \r\n            if (!isNaN(bloodIndex) && bloodIndex >= 1 && bloodIndex <= 4) {\r\n                const filteredProducts = productsData.filter(product => product.groupBloodNotAllowed[bloodIndex] === true);\r\n                console.log(\"🚫 Forbidden Foods Calculated:\", filteredProducts);\r\n                setForbiddenFoods(filteredProducts);\r\n            } else {\r\n                console.warn(\"⚠️ Invalid blood type:\", user.bloodType);\r\n            }\r\n        } else {\r\n            console.warn(\"⚠️ User blood type is missing!\");\r\n        }\r\n        \r\n        setCalories(dailyCaloriesByDate[formattedDate] || 0);\r\n    }, [formattedDate, dailyCaloriesByDate, consumedFoods, user]);\r\n    \r\n    const dailyCalories = dailyCaloriesByDate[formattedDate] || 0;\r\n    const consumedCalories = (consumedFoods[formattedDate] || []).reduce((total, food) => total + food.calories, 0);\r\n    const remainingCalories = Math.max(dailyCalories - consumedCalories, 0);\r\n    const percentageOfDailyIntake = dailyCalories > 0 ? ((consumedCalories / dailyCalories) * 100).toFixed(1) : 0;\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n    };\r\n\r\n    return (\r\n        <div className={styles.summaryContainer}>\r\n            <div className={styles.summaryHeader}>\r\n                <button className={styles.navButton} onClick={() => navigate(\"/summary\")}>Nic</button>\r\n                <div className={styles.verticalBar}></div>\r\n                <button className={styles.logoutButton} onClick={handleLogout}>Exit</button>\r\n            </div>\r\n\r\n            <h3 className={styles.summaryTitle}>Summary for {dateObject.toLocaleDateString(\"ro-RO\")}</h3>\r\n            \r\n            <ul className={styles.summaryList}>\r\n                <li><span>Left</span> {remainingCalories.toFixed(2)} kcal</li>\r\n                <li><span>Consumed</span> {consumedCalories.toFixed(2)} kcal</li>\r\n                <li><span>Daily rate</span> {dailyCalories.toFixed(2)} kcal</li>\r\n                <li><span>% of normal</span> {percentageOfDailyIntake}%</li>\r\n            </ul>\r\n\r\n            {/* 🔹 Lista produselor nerecomandate */}\r\n            <div className={styles.forbiddenFoodsContainer}>\r\n                <h2>Your recommended daily calorie intake is</h2>\r\n                <p className={styles.caloriesNumber}>{calories} kcal</p>\r\n                <hr className={styles.modalDivider} />\r\n                <h3 className={styles.title2}>Foods you should avoid:</h3>\r\n                <ol className={styles.forbiddenList}>\r\n                    {forbiddenFoods.length > 0 ? (\r\n                        forbiddenFoods.map((food, index) => (\r\n                            <li key={food._id}>{index + 1}. {food.title}</li>\r\n                        ))\r\n                    ) : (\r\n                        <li>No restricted foods found.</li>\r\n                    )}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}