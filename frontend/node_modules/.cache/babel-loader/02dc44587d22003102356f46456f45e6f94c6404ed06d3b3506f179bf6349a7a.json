{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\DiaryDateCalendar\\\\DiaryDateCalendar.jsx\";\nimport React from \"react\";\nimport styles from \"./DiaryDateCalendar.module.css\";\nimport CalendarIcon from \"../../assets/calendar 1.svg\"; // ✅ Import custom SVG icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryDateCalendar = ({\n  selectedDate,\n  setSelectedDate\n}) => {\n  // ✅ Ensure `selectedDate` is a valid Date object\n  const validDate = selectedDate instanceof Date && !isNaN(selectedDate) ? selectedDate : new Date();\n\n  // ✅ Format the date as `dd.mm.yyyy`\n  const formattedDate = validDate.toLocaleDateString(\"ro-RO\", {\n    day: \"2-digit\",\n    month: \"2-digit\",\n    year: \"numeric\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calendarContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.datePickerWrapper,\n      onClick: () => document.getElementById(\"dateInput\").showPicker(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"dateInput\",\n        value: validDate.toISOString().split(\"T\")[0] // Ensure it's always a valid date\n        ,\n        onChange: e => setSelectedDate(new Date(e.target.value)),\n        className: styles.hiddenDateInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.dateText,\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: CalendarIcon,\n        alt: \"Calendar Icon\",\n        className: styles.calendarIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = DiaryDateCalendar;\nexport default DiaryDateCalendar;\nvar _c;\n$RefreshReg$(_c, \"DiaryDateCalendar\");","map":{"version":3,"names":["React","styles","CalendarIcon","jsxDEV","_jsxDEV","DiaryDateCalendar","selectedDate","setSelectedDate","validDate","Date","isNaN","formattedDate","toLocaleDateString","day","month","year","className","calendarContainer","children","datePickerWrapper","onClick","document","getElementById","showPicker","type","id","value","toISOString","split","onChange","e","target","hiddenDateInput","fileName","_jsxFileName","lineNumber","columnNumber","dateText","src","alt","calendarIcon","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/DiaryDateCalendar/DiaryDateCalendar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./DiaryDateCalendar.module.css\";\r\nimport CalendarIcon from \"../../assets/calendar 1.svg\"; // ✅ Import custom SVG icon\r\n\r\nconst DiaryDateCalendar = ({ selectedDate, setSelectedDate }) => {\r\n    // ✅ Ensure `selectedDate` is a valid Date object\r\n    const validDate = selectedDate instanceof Date && !isNaN(selectedDate) ? selectedDate : new Date();\r\n\r\n    // ✅ Format the date as `dd.mm.yyyy`\r\n    const formattedDate = validDate.toLocaleDateString(\"ro-RO\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n    });\r\n\r\n    return (\r\n        <div className={styles.calendarContainer}>\r\n            <div className={styles.datePickerWrapper} onClick={() => document.getElementById(\"dateInput\").showPicker()}>\r\n                {/* ✅ Hidden input for selecting the date */}\r\n                <input\r\n                    type=\"date\"\r\n                    id=\"dateInput\"\r\n                    value={validDate.toISOString().split(\"T\")[0]} // Ensure it's always a valid date\r\n                    onChange={(e) => setSelectedDate(new Date(e.target.value))}\r\n                    className={styles.hiddenDateInput}\r\n                />\r\n\r\n                {/* ✅ Display formatted date */}\r\n                <span className={styles.dateText}>{formattedDate}</span>\r\n\r\n                {/* ✅ Custom SVG icon */}\r\n                <img src={CalendarIcon} alt=\"Calendar Icon\" className={styles.calendarIcon} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiaryDateCalendar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,YAAY,MAAM,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAC7D;EACA,MAAMC,SAAS,GAAGF,YAAY,YAAYG,IAAI,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,GAAGA,YAAY,GAAG,IAAIG,IAAI,CAAC,CAAC;;EAElG;EACA,MAAME,aAAa,GAAGH,SAAS,CAACI,kBAAkB,CAAC,OAAO,EAAE;IACxDC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,oBACIX,OAAA;IAAKY,SAAS,EAAEf,MAAM,CAACgB,iBAAkB;IAAAC,QAAA,eACrCd,OAAA;MAAKY,SAAS,EAAEf,MAAM,CAACkB,iBAAkB;MAACC,OAAO,EAAEA,CAAA,KAAMC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,UAAU,CAAC,CAAE;MAAAL,QAAA,gBAEvGd,OAAA;QACIoB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,WAAW;QACdC,KAAK,EAAElB,SAAS,CAACmB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;QAAA;QAC9CC,QAAQ,EAAGC,CAAC,IAAKvB,eAAe,CAAC,IAAIE,IAAI,CAACqB,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC,CAAE;QAC3DV,SAAS,EAAEf,MAAM,CAAC+B;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eAGFhC,OAAA;QAAMY,SAAS,EAAEf,MAAM,CAACoC,QAAS;QAAAnB,QAAA,EAAEP;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAGxDhC,OAAA;QAAKkC,GAAG,EAAEpC,YAAa;QAACqC,GAAG,EAAC,eAAe;QAACvB,SAAS,EAAEf,MAAM,CAACuC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACK,EAAA,GA/BIpC,iBAAiB;AAiCvB,eAAeA,iBAAiB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}