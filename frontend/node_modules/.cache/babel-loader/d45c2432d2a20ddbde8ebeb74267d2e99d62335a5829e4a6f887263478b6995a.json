{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\DiaryAddProductForm\\\\DiaryAddProductForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addConsumedFood } from \"../../redux/caloriesSlice\";\nimport productsData from \"../../data/products.json\";\nimport styles from \"./DiaryAddProductForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryAddProductForm = ({\n  selectedDate\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [calories, setCalories] = useState(0);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    if (product.length > 0) {\n      const filtered = productsData.filter(p => p.title.toLowerCase().includes(product.toLowerCase()));\n      setFilteredProducts(filtered);\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [product]);\n  const handleSelectProduct = selectedProduct => {\n    setProduct(selectedProduct.title);\n    setCalories(selectedProduct.calories);\n    setFilteredProducts([]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!product || !weight) return;\n    const totalCalories = weight / 100 * calories;\n\n    // ✅ Convertim în `yyyy-mm-dd` pentru Redux/API\n    const formattedDate = selectedDate instanceof Date ? selectedDate.toISOString().split(\"T\")[0] : new Date(selectedDate).toISOString().split(\"T\")[0];\n\n    // ✅ Trimiterea datelor către backend\n    fetch(\"http://localhost:5000/api/calories\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: formattedDate,\n        name: product,\n        weight: Number(weight),\n        calories: totalCalories\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Success:\", data);\n\n      // ✅ Salvăm în Redux\n      dispatch(addConsumedFood({\n        date: formattedDate,\n        name: product,\n        weight: Number(weight),\n        calories: totalCalories\n      }));\n\n      // ✅ Resetăm câmpurile formularului\n      setProduct(\"\");\n      setWeight(\"\");\n      setCalories(0);\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter food name\",\n          value: product,\n          onChange: e => setProduct(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), filteredProducts.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.suggestions,\n          children: filteredProducts.slice(0, 5).map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectProduct(p),\n            children: [p.title, \" (\", p.calories, \" kcal/100g)\"]\n          }, p._id.$oid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Grams\",\n          value: weight,\n          onChange: e => setWeight(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.submitButton,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryAddProductForm, \"+ClA8QIQzbXdvmHlJZ9fzJb4Tu8=\", false, function () {\n  return [useDispatch];\n});\n_c = DiaryAddProductForm;\nexport default DiaryAddProductForm;\nvar _c;\n$RefreshReg$(_c, \"DiaryAddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","addConsumedFood","productsData","styles","jsxDEV","_jsxDEV","DiaryAddProductForm","selectedDate","_s","dispatch","product","setProduct","weight","setWeight","calories","setCalories","filteredProducts","setFilteredProducts","length","filtered","filter","p","title","toLowerCase","includes","handleSelectProduct","selectedProduct","handleSubmit","e","preventDefault","totalCalories","formattedDate","Date","toISOString","split","fetch","method","headers","body","JSON","stringify","date","name","Number","then","response","ok","Error","status","json","data","console","log","catch","error","className","formContainer","children","onSubmit","inputGroup","type","placeholder","value","onChange","target","inputField","fileName","_jsxFileName","lineNumber","columnNumber","suggestions","slice","map","onClick","_id","$oid","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addConsumedFood } from \"../../redux/caloriesSlice\";\r\nimport productsData from \"../../data/products.json\";\r\nimport styles from \"./DiaryAddProductForm.module.css\";\r\n\r\nconst DiaryAddProductForm = ({ selectedDate }) => {\r\n    const dispatch = useDispatch();\r\n    const [product, setProduct] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [calories, setCalories] = useState(0);\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (product.length > 0) {\r\n            const filtered = productsData.filter((p) =>\r\n                p.title.toLowerCase().includes(product.toLowerCase())\r\n            );\r\n            setFilteredProducts(filtered);\r\n        } else {\r\n            setFilteredProducts([]);\r\n        }\r\n    }, [product]);\r\n\r\n    const handleSelectProduct = (selectedProduct) => {\r\n        setProduct(selectedProduct.title);\r\n        setCalories(selectedProduct.calories);\r\n        setFilteredProducts([]);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!product || !weight) return;\r\n    \r\n        const totalCalories = (weight / 100) * calories;\r\n        \r\n        // ✅ Convertim în `yyyy-mm-dd` pentru Redux/API\r\n        const formattedDate = selectedDate instanceof Date \r\n            ? selectedDate.toISOString().split(\"T\")[0] \r\n            : new Date(selectedDate).toISOString().split(\"T\")[0];\r\n    \r\n        // ✅ Trimiterea datelor către backend\r\n        fetch(\"http://localhost:5000/api/calories\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                date: formattedDate,\r\n                name: product,\r\n                weight: Number(weight),\r\n                calories: totalCalories,\r\n            }),\r\n        })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            console.log(\"Success:\", data);\r\n            \r\n            // ✅ Salvăm în Redux\r\n            dispatch(addConsumedFood({ \r\n                date: formattedDate, \r\n                name: product, \r\n                weight: Number(weight), \r\n                calories: totalCalories \r\n            }));\r\n    \r\n            // ✅ Resetăm câmpurile formularului\r\n            setProduct(\"\");\r\n            setWeight(\"\");\r\n            setCalories(0);\r\n        })\r\n        .catch((error) => console.error(\"Error:\", error));\r\n    };\r\n    \r\n    return (\r\n        <div className={styles.formContainer}>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={styles.inputGroup}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter food name\"\r\n                        value={product}\r\n                        onChange={(e) => setProduct(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n                    {filteredProducts.length > 0 && (\r\n                        <ul className={styles.suggestions}>\r\n                            {filteredProducts.slice(0, 5).map((p) => (\r\n                                <li key={p._id.$oid} onClick={() => handleSelectProduct(p)}>\r\n                                    {p.title} ({p.calories} kcal/100g)\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Grams\"\r\n                        value={weight}\r\n                        onChange={(e) => setWeight(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n                    <button type=\"submit\" className={styles.submitButton}>+</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}