{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\Summary\\\\Summary.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./Summary.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summary = ({\n  selectedDate\n}) => {\n  _s();\n  // ✅ Ensure selectedDate is a valid date\n  let formattedDate = \"\";\n  try {\n    formattedDate = new Date(selectedDate).toISOString().split(\"T\")[0]; // ✅ Fix error\n  } catch (error) {\n    console.error(\"Invalid date format:\", selectedDate);\n    formattedDate = new Date().toISOString().split(\"T\")[0]; // Default to today if error occurs\n  }\n  const {\n    dailyCalories,\n    consumedFoods\n  } = useSelector(state => state.calories);\n  const dailyConsumedFoods = consumedFoods[formattedDate] || [];\n  const consumedCalories = dailyConsumedFoods.reduce((total, food) => total + food.calories, 0);\n  const remainingCalories = dailyCalories - consumedCalories;\n  const percentageOfDailyIntake = dailyCalories > 0 ? (consumedCalories / dailyCalories * 100).toFixed(1) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.summaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.summaryTitle,\n      children: [\"Summary for \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.summaryList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Left:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), \" \", remainingCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Consumed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), \" \", consumedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Daily Rate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), \" \", dailyCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"% of normal:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), \" \", percentageOfDailyIntake, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Summary, \"s129w86VtugnXjbYjyTBwgpQPCQ=\", false, function () {\n  return [useSelector];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useSelector","styles","jsxDEV","_jsxDEV","Summary","selectedDate","_s","formattedDate","Date","toISOString","split","error","console","dailyCalories","consumedFoods","state","calories","dailyConsumedFoods","consumedCalories","reduce","total","food","remainingCalories","percentageOfDailyIntake","toFixed","className","summaryContainer","children","summaryTitle","fileName","_jsxFileName","lineNumber","columnNumber","summaryList","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/Summary/Summary.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./Summary.module.css\";\r\n\r\nconst Summary = ({ selectedDate }) => {\r\n    // ✅ Ensure selectedDate is a valid date\r\n    let formattedDate = \"\";\r\n    try {\r\n        formattedDate = new Date(selectedDate).toISOString().split(\"T\")[0]; // ✅ Fix error\r\n    } catch (error) {\r\n        console.error(\"Invalid date format:\", selectedDate);\r\n        formattedDate = new Date().toISOString().split(\"T\")[0]; // Default to today if error occurs\r\n    }\r\n\r\n    const { dailyCalories, consumedFoods } = useSelector((state) => state.calories);\r\n    const dailyConsumedFoods = consumedFoods[formattedDate] || [];\r\n    const consumedCalories = dailyConsumedFoods.reduce((total, food) => total + food.calories, 0);\r\n\r\n    const remainingCalories = dailyCalories - consumedCalories;\r\n    const percentageOfDailyIntake = dailyCalories > 0 ? ((consumedCalories / dailyCalories) * 100).toFixed(1) : 0;\r\n\r\n    return (\r\n        <div className={styles.summaryContainer}>\r\n            <h3 className={styles.summaryTitle}>Summary for {formattedDate}</h3>\r\n            <ul className={styles.summaryList}>\r\n                <li><span>Left:</span> {remainingCalories} kcal</li>\r\n                <li><span>Consumed:</span> {consumedCalories} kcal</li>\r\n                <li><span>Daily Rate:</span> {dailyCalories} kcal</li>\r\n                <li><span>% of normal:</span> {percentageOfDailyIntake}%</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}