{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  dailyCalories: 0,\n  // Caloriile zilnice calculate\n  consumedCalories: 0,\n  // Caloriile consumate de utilizator\n  foodEntries: [] // Lista cu produsele consumate\n};\n\nconst diarySlice = createSlice({\n  name: \"diary\",\n  initialState,\n  reducers: {\n    setDailyCalories: (state, action) => {\n      state.dailyCalories = action.payload;\n    },\n    addFoodEntry: (state, action) => {\n      state.foodEntries.push(action.payload);\n      state.consumedCalories += action.payload.calories; // ✅ Adăugăm caloriile consumate\n    },\n\n    removeFoodEntry: (state, action) => {\n      const foodToRemove = state.foodEntries.find(food => food.id === action.payload);\n      if (foodToRemove) {\n        state.consumedCalories -= foodToRemove.calories; // ✅ Scădem caloriile consumate\n        state.foodEntries = state.foodEntries.filter(food => food.id !== action.payload);\n      }\n    }\n  }\n});\nexport const {\n  setDailyCalories,\n  addFoodEntry,\n  removeFoodEntry\n} = diarySlice.actions;\nexport default diarySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","dailyCalories","consumedCalories","foodEntries","diarySlice","name","reducers","setDailyCalories","state","action","payload","addFoodEntry","push","calories","removeFoodEntry","foodToRemove","find","food","id","filter","actions","reducer"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/redux/diarySlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    dailyCalories: 0,  // Caloriile zilnice calculate\r\n    consumedCalories: 0,  // Caloriile consumate de utilizator\r\n    foodEntries: []  // Lista cu produsele consumate\r\n};\r\n\r\nconst diarySlice = createSlice({\r\n    name: \"diary\",\r\n    initialState,\r\n    reducers: {\r\n        setDailyCalories: (state, action) => {\r\n            state.dailyCalories = action.payload;\r\n        },\r\n        addFoodEntry: (state, action) => {\r\n            state.foodEntries.push(action.payload);\r\n            state.consumedCalories += action.payload.calories; // ✅ Adăugăm caloriile consumate\r\n        },\r\n        removeFoodEntry: (state, action) => {\r\n            const foodToRemove = state.foodEntries.find(food => food.id === action.payload);\r\n            if (foodToRemove) {\r\n                state.consumedCalories -= foodToRemove.calories; // ✅ Scădem caloriile consumate\r\n                state.foodEntries = state.foodEntries.filter(food => food.id !== action.payload);\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setDailyCalories, addFoodEntry, removeFoodEntry } = diarySlice.actions;\r\nexport default diarySlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,aAAa,EAAE,CAAC;EAAG;EACnBC,gBAAgB,EAAE,CAAC;EAAG;EACtBC,WAAW,EAAE,EAAE,CAAE;AACrB,CAAC;;AAED,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC3BM,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACNC,gBAAgB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACP,aAAa,GAAGQ,MAAM,CAACC,OAAO;IACxC,CAAC;IACDC,YAAY,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,WAAW,CAACS,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;MACtCF,KAAK,CAACN,gBAAgB,IAAIO,MAAM,CAACC,OAAO,CAACG,QAAQ,CAAC,CAAC;IACvD,CAAC;;IACDC,eAAe,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMM,YAAY,GAAGP,KAAK,CAACL,WAAW,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACC,OAAO,CAAC;MAC/E,IAAIK,YAAY,EAAE;QACdP,KAAK,CAACN,gBAAgB,IAAIa,YAAY,CAACF,QAAQ,CAAC,CAAC;QACjDL,KAAK,CAACL,WAAW,GAAGK,KAAK,CAACL,WAAW,CAACgB,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACC,OAAO,CAAC;MACpF;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,gBAAgB;EAAEI,YAAY;EAAEG;AAAgB,CAAC,GAAGV,UAAU,CAACgB,OAAO;AACrF,eAAehB,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module"}