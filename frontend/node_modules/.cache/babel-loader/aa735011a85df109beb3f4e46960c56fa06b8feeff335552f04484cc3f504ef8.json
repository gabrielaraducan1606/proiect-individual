{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\Summary\\\\Summary.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport productsData from \"../../data/products.json\"; // ✅ Import products\nimport styles from \"./Summary.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFormattedDate = () => {\n  const today = new Date();\n  return `${String(today.getDate()).padStart(2, \"0\")}.${String(today.getMonth() + 1).padStart(2, \"0\")}.${today.getFullYear()}`;\n};\nconst Summary = () => {\n  _s();\n  // ✅ Get the necessary data from Redux\n  const {\n    dailyCalories = 0,\n    consumedCalories = 0,\n    consumedFoods = []\n  } = useSelector(state => state.calories || {});\n  const bloodType = useSelector(state => state.user.bloodType); // ✅ Get user blood type\n\n  // ✅ Calculate calories left\n  const remainingCalories = dailyCalories - consumedCalories >= 0 ? dailyCalories - consumedCalories : 0;\n\n  // ✅ Calculate % of normal daily intake\n  const percentageOfDailyIntake = dailyCalories > 0 ? (consumedCalories / dailyCalories * 100).toFixed(1) : 0;\n\n  // ✅ Get non-recommended foods based on blood type\n  const nonRecommendedFoods = productsData.filter(product => {\n    if (bloodType === undefined || bloodType < 0 || bloodType > 4) return false;\n    return product.groupBloodNotAllowed[bloodType]; // ✅ Check if food is not allowed for this blood type\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.summaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.summaryTitle,\n      children: [\"Summary for \", getFormattedDate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.summaryList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), \" \", remainingCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Consumed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), \" \", consumedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Daily Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), \" \", dailyCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"% of Normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), \" \", percentageOfDailyIntake, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nonRecommendedContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u26A0 Not Recommended for Your Blood Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), nonRecommendedFoods.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All foods are allowed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.nonRecommendedList,\n        children: nonRecommendedFoods.map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [food.title, \" - \", food.calories, \" kcal\"]\n        }, food._id.$oid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Summary, \"z4HFwt59fO7aRcUFugut8WwiyPo=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useSelector","productsData","styles","jsxDEV","_jsxDEV","getFormattedDate","today","Date","String","getDate","padStart","getMonth","getFullYear","Summary","_s","dailyCalories","consumedCalories","consumedFoods","state","calories","bloodType","user","remainingCalories","percentageOfDailyIntake","toFixed","nonRecommendedFoods","filter","product","undefined","groupBloodNotAllowed","className","summaryContainer","children","summaryTitle","fileName","_jsxFileName","lineNumber","columnNumber","summaryList","nonRecommendedContainer","length","nonRecommendedList","map","food","title","_id","$oid","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/Summary/Summary.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport productsData from \"../../data/products.json\"; // ✅ Import products\r\nimport styles from \"./Summary.module.css\";\r\n\r\nconst getFormattedDate = () => {\r\n    const today = new Date();\r\n    return `${String(today.getDate()).padStart(2, \"0\")}.${String(today.getMonth() + 1).padStart(2, \"0\")}.${today.getFullYear()}`;\r\n};\r\n\r\nconst Summary = () => {\r\n    // ✅ Get the necessary data from Redux\r\n    const { dailyCalories = 0, consumedCalories = 0, consumedFoods = [] } = useSelector((state) => state.calories || {});\r\n    const bloodType = useSelector((state) => state.user.bloodType); // ✅ Get user blood type\r\n\r\n    // ✅ Calculate calories left\r\n    const remainingCalories = dailyCalories - consumedCalories >= 0 ? dailyCalories - consumedCalories : 0;\r\n\r\n    // ✅ Calculate % of normal daily intake\r\n    const percentageOfDailyIntake = dailyCalories > 0 ? ((consumedCalories / dailyCalories) * 100).toFixed(1) : 0;\r\n\r\n    // ✅ Get non-recommended foods based on blood type\r\n    const nonRecommendedFoods = productsData.filter((product) => {\r\n        if (bloodType === undefined || bloodType < 0 || bloodType > 4) return false;\r\n        return product.groupBloodNotAllowed[bloodType]; // ✅ Check if food is not allowed for this blood type\r\n    });\r\n\r\n    return (\r\n        <div className={styles.summaryContainer}>\r\n            <h3 className={styles.summaryTitle}>Summary for {getFormattedDate()}</h3>\r\n            <ul className={styles.summaryList}>\r\n                <li><span>Left</span> {remainingCalories} kcal</li>\r\n                <li><span>Consumed</span> {consumedCalories} kcal</li>\r\n                <li><span>Daily Rate</span> {dailyCalories} kcal</li>\r\n                <li><span>% of Normal</span> {percentageOfDailyIntake}%</li>\r\n            </ul>\r\n\r\n            {/* ✅ Non-Recommended Foods List */}\r\n            <div className={styles.nonRecommendedContainer}>\r\n                <h4>⚠ Not Recommended for Your Blood Type</h4>\r\n                {nonRecommendedFoods.length === 0 ? (\r\n                    <p>All foods are allowed.</p>\r\n                ) : (\r\n                    <ul className={styles.nonRecommendedList}>\r\n                        {nonRecommendedFoods.map((food) => (\r\n                            <li key={food._id.$oid}>{food.title} - {food.calories} kcal</li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}