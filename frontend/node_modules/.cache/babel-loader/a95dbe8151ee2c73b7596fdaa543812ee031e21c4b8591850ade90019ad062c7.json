{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\pages\\\\DiaryPage\\\\DiaryPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSelectedDate } from \"../../redux/caloriesSlice\";\nimport DiaryDateCalendar from \"../../components/DiaryDateCalendar/DiaryDateCalendar\";\nimport DiaryAddProductForm from \"../../components/DiaryAddProductForm/DiaryAddProductForm\";\nimport DiaryProductsList from \"../../components/DiaryProductsList/DiaryProductsList\";\nimport Summary from \"../../components/Summary/Summary\";\nimport styles from \"./DiaryPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedDate = useSelector(state => state.calories.selectedDate);\n\n  // âœ… Ensure `selectedDate` is a valid Date object\n  let dateObject;\n  if (selectedDate) {\n    dateObject = new Date(selectedDate);\n    if (isNaN(dateObject.getTime())) {\n      console.error(\"ðŸš¨ Invalid selectedDate, resetting to today.\");\n      dateObject = new Date();\n      dispatch(setSelectedDate(dateObject.toISOString().split(\"T\")[0]));\n    }\n  } else {\n    console.error(\"ðŸš¨ selectedDate is undefined, resetting to today.\");\n    dateObject = new Date();\n    dispatch(setSelectedDate(dateObject.toISOString().split(\"T\")[0]));\n  }\n  const formattedDate = dateObject.toISOString().split(\"T\")[0];\n  const dailyCaloriesByDate = useSelector(state => state.calories.dailyCaloriesByDate || {});\n  const consumedFoods = useSelector(state => state.calories.consumedFoods || {});\n  console.log(\"ðŸ“Œ [DiaryPage] Selected Date:\", formattedDate);\n  console.log(\"ðŸ“Œ [DiaryPage] dailyCaloriesByDate:\", dailyCaloriesByDate);\n  console.log(\"ðŸ“Œ [DiaryPage] consumedFoods:\", consumedFoods);\n  const dailyCalories = dailyCaloriesByDate[formattedDate] || 0;\n\n  // âœ… Function to update Redux state when the date changes\n  const handleDateChange = newDate => {\n    if (newDate instanceof Date && !isNaN(newDate.getTime())) {\n      dispatch(setSelectedDate(newDate.toISOString().split(\"T\")[0]));\n    } else {\n      console.error(\"ðŸš¨ Invalid date selected\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.diaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leftContent,\n      children: [/*#__PURE__*/_jsxDEV(DiaryDateCalendar, {\n        selectedDate: dateObject,\n        setSelectedDate: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DiaryAddProductForm, {\n        selectedDate: dateObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DiaryProductsList, {\n        selectedDate: dateObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rightContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.dailyCaloriesTitle,\n        children: [\"Daily Calories Goal: \", dailyCalories.toFixed(2), \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Summary, {\n        selectedDate: dateObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryPage, \"95aDJA2NIV2deroXHMMFRIQJaVA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = DiaryPage;\nexport default DiaryPage;\nvar _c;\n$RefreshReg$(_c, \"DiaryPage\");","map":{"version":3,"names":["React","useSelector","useDispatch","setSelectedDate","DiaryDateCalendar","DiaryAddProductForm","DiaryProductsList","Summary","styles","jsxDEV","_jsxDEV","DiaryPage","_s","dispatch","selectedDate","state","calories","dateObject","Date","isNaN","getTime","console","error","toISOString","split","formattedDate","dailyCaloriesByDate","consumedFoods","log","dailyCalories","handleDateChange","newDate","className","diaryContainer","children","leftContent","fileName","_jsxFileName","lineNumber","columnNumber","rightContent","dailyCaloriesTitle","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSelectedDate } from \"../../redux/caloriesSlice\";\r\nimport DiaryDateCalendar from \"../../components/DiaryDateCalendar/DiaryDateCalendar\";\r\nimport DiaryAddProductForm from \"../../components/DiaryAddProductForm/DiaryAddProductForm\";\r\nimport DiaryProductsList from \"../../components/DiaryProductsList/DiaryProductsList\";\r\nimport Summary from \"../../components/Summary/Summary\";\r\nimport styles from \"./DiaryPage.module.css\";\r\n\r\nconst DiaryPage = () => {\r\n    const dispatch = useDispatch();\r\n    const selectedDate = useSelector((state) => state.calories.selectedDate);\r\n\r\n    // âœ… Ensure `selectedDate` is a valid Date object\r\n    let dateObject;\r\n    if (selectedDate) {\r\n        dateObject = new Date(selectedDate);\r\n        if (isNaN(dateObject.getTime())) {\r\n            console.error(\"ðŸš¨ Invalid selectedDate, resetting to today.\");\r\n            dateObject = new Date();\r\n            dispatch(setSelectedDate(dateObject.toISOString().split(\"T\")[0]));\r\n        }\r\n    } else {\r\n        console.error(\"ðŸš¨ selectedDate is undefined, resetting to today.\");\r\n        dateObject = new Date();\r\n        dispatch(setSelectedDate(dateObject.toISOString().split(\"T\")[0]));\r\n    }\r\n\r\n    const formattedDate = dateObject.toISOString().split(\"T\")[0];\r\n\r\n    const dailyCaloriesByDate = useSelector((state) => state.calories.dailyCaloriesByDate || {});\r\n    const consumedFoods = useSelector((state) => state.calories.consumedFoods || {});\r\n\r\n    console.log(\"ðŸ“Œ [DiaryPage] Selected Date:\", formattedDate);\r\n    console.log(\"ðŸ“Œ [DiaryPage] dailyCaloriesByDate:\", dailyCaloriesByDate);\r\n    console.log(\"ðŸ“Œ [DiaryPage] consumedFoods:\", consumedFoods);\r\n\r\n    const dailyCalories = dailyCaloriesByDate[formattedDate] || 0;\r\n\r\n    // âœ… Function to update Redux state when the date changes\r\n    const handleDateChange = (newDate) => {\r\n        if (newDate instanceof Date && !isNaN(newDate.getTime())) {\r\n            dispatch(setSelectedDate(newDate.toISOString().split(\"T\")[0]));\r\n        } else {\r\n            console.error(\"ðŸš¨ Invalid date selected\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.diaryContainer}>\r\n            <div className={styles.leftContent}>\r\n                {/* âœ… Use Redux date and update it in Redux on change */}\r\n                <DiaryDateCalendar selectedDate={dateObject} setSelectedDate={handleDateChange} />\r\n                <DiaryAddProductForm selectedDate={dateObject} />\r\n                <DiaryProductsList selectedDate={dateObject} />\r\n            </div>\r\n\r\n            <div className={styles.rightContent}>\r\n                <h3 className={styles.dailyCaloriesTitle}>Daily Calories Goal: {dailyCalories.toFixed(2)} kcal</h3>\r\n                \r\n                {/* âœ… Pass `selectedDate` correctly to Summary */}\r\n                <Summary selectedDate={dateObject} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiaryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}