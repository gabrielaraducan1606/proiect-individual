{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\Summary\\\\Summary.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./Summary.module.css\";\n\n// ✅ Funcție pentru obținerea datei curente în format \"DD.MM.YYYY\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFormattedDate = () => {\n  const today = new Date();\n  const day = String(today.getDate()).padStart(2, \"0\"); // ✅ Asigură două cifre pentru zi\n  const month = String(today.getMonth() + 1).padStart(2, \"0\"); // ✅ Asigură două cifre pentru lună\n  const year = today.getFullYear();\n  return `${day}.${month}.${year}`;\n};\nconst Summary = () => {\n  _s();\n  const {\n    dailyCalories = 0,\n    consumedCalories = 0\n  } = useSelector(state => state.calories || {});\n  const remainingCalories = dailyCalories - consumedCalories;\n  const percentageOfDailyIntake = dailyCalories > 0 ? (consumedCalories / dailyCalories * 100).toFixed(1) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.summaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.summaryTitle,\n      children: [\"Summary for \", getFormattedDate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.summaryList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), \" \", remainingCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Consumed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), \" \", consumedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Daily Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), \" \", dailyCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"% of normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), \" \", percentageOfDailyIntake, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Summary, \"F10X7O+XJCrTUoIQONQojLgcU1k=\", false, function () {\n  return [useSelector];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useSelector","styles","jsxDEV","_jsxDEV","getFormattedDate","today","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","Summary","_s","dailyCalories","consumedCalories","state","calories","remainingCalories","percentageOfDailyIntake","toFixed","className","summaryContainer","children","summaryTitle","fileName","_jsxFileName","lineNumber","columnNumber","summaryList","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/Summary/Summary.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./Summary.module.css\";\r\n\r\n// ✅ Funcție pentru obținerea datei curente în format \"DD.MM.YYYY\"\r\nconst getFormattedDate = () => {\r\n    const today = new Date();\r\n    const day = String(today.getDate()).padStart(2, \"0\");  // ✅ Asigură două cifre pentru zi\r\n    const month = String(today.getMonth() + 1).padStart(2, \"0\"); // ✅ Asigură două cifre pentru lună\r\n    const year = today.getFullYear();\r\n    return `${day}.${month}.${year}`;\r\n};\r\n\r\nconst Summary = () => {\r\n    const { dailyCalories = 0, consumedCalories = 0 } = useSelector((state) => state.calories || {});\r\n\r\n    const remainingCalories = dailyCalories - consumedCalories;\r\n    const percentageOfDailyIntake = dailyCalories > 0 \r\n        ? ((consumedCalories / dailyCalories) * 100).toFixed(1) \r\n        : 0;\r\n\r\n    return (\r\n        <div className={styles.summaryContainer}>\r\n            {/* ✅ Acum afișăm data curentă în formatul 13.08.2027 */}\r\n            <h3 className={styles.summaryTitle}>Summary for {getFormattedDate()}</h3> \r\n            \r\n            <ul className={styles.summaryList}>\r\n                <li><span>Left</span> {remainingCalories} kcal</li>\r\n                <li><span>Consumed</span> {consumedCalories} kcal</li>\r\n                <li><span>Daily Rate</span> {dailyCalories} kcal</li>\r\n                <li><span>% of normal</span> {percentageOfDailyIntake}%</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}