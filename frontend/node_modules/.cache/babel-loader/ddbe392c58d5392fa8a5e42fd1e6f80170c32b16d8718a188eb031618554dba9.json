{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  dailyCalories: 0,\n  consumedCalories: 0,\n  consumedFoods: {} // ðŸ”¥ Alimentele consumate sunt salvate pe zile\n};\nconst caloriesSlice = createSlice({\n  name: \"calories\",\n  initialState,\n  reducers: {\n    // âœ… SeteazÄƒ numÄƒrul zilnic de calorii\n    setDailyCalories: (state, action) => {\n      state.dailyCalories = action.payload;\n    },\n    // âœ… AdaugÄƒ un aliment consumat pentru o zi specificÄƒ\n    addConsumedFood: (state, action) => {\n      const {\n        date,\n        name,\n        weight,\n        calories\n      } = action.payload;\n      if (!date || isNaN(new Date(date))) {\n        console.error(\"Invalid date provided for food:\", date);\n        return;\n      }\n      const formattedDate = new Date(date).toISOString().split(\"T\")[0];\n      if (!state.consumedFoods[formattedDate]) {\n        state.consumedFoods[formattedDate] = [];\n      }\n      state.consumedFoods[formattedDate].push({\n        name,\n        weight,\n        calories\n      });\n      state.consumedCalories = Object.values(state.consumedFoods).flat().reduce((total, food) => total + food.calories, 0);\n    },\n    // âœ… È˜terge un aliment consumat din listÄƒ\n    removeConsumedFood: (state, action) => {\n      const {\n        date,\n        index\n      } = action.payload;\n      if (state.consumedFoods[date]) {\n        state.consumedFoods[date].splice(index, 1);\n\n        // âœ… DacÄƒ nu mai sunt alimente Ã®n ziua respectivÄƒ, È™tergem ziua din listÄƒ\n        if (state.consumedFoods[date].length === 0) {\n          delete state.consumedFoods[date];\n        }\n\n        // âœ… ActualizÄƒm totalul caloriilor consumate\n        state.consumedCalories = Object.values(state.consumedFoods).flat().reduce((total, food) => total + food.calories, 0);\n      }\n    }\n  }\n});\n\n// âœ… Export corect\nexport const {\n  setDailyCalories,\n  addConsumedFood,\n  removeConsumedFood\n} = caloriesSlice.actions;\nexport default caloriesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","dailyCalories","consumedCalories","consumedFoods","caloriesSlice","name","reducers","setDailyCalories","state","action","payload","addConsumedFood","date","weight","calories","isNaN","Date","console","error","formattedDate","toISOString","split","push","Object","values","flat","reduce","total","food","removeConsumedFood","index","splice","length","actions","reducer"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/redux/caloriesSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    dailyCalories: 0,\r\n    consumedCalories: 0,\r\n    consumedFoods: {}, // ðŸ”¥ Alimentele consumate sunt salvate pe zile\r\n};\r\n\r\nconst caloriesSlice = createSlice({\r\n    name: \"calories\",\r\n    initialState,\r\n    reducers: {\r\n        // âœ… SeteazÄƒ numÄƒrul zilnic de calorii\r\n        setDailyCalories: (state, action) => {\r\n            state.dailyCalories = action.payload;\r\n        },\r\n\r\n        // âœ… AdaugÄƒ un aliment consumat pentru o zi specificÄƒ\r\n        addConsumedFood: (state, action) => {\r\n            const { date, name, weight, calories } = action.payload;\r\n        \r\n            if (!date || isNaN(new Date(date))) {\r\n                console.error(\"Invalid date provided for food:\", date);\r\n                return;\r\n            }\r\n        \r\n            const formattedDate = new Date(date).toISOString().split(\"T\")[0];\r\n        \r\n            if (!state.consumedFoods[formattedDate]) {\r\n                state.consumedFoods[formattedDate] = [];\r\n            }\r\n        \r\n            state.consumedFoods[formattedDate].push({ name, weight, calories });\r\n        \r\n            state.consumedCalories = Object.values(state.consumedFoods)\r\n                .flat()\r\n                .reduce((total, food) => total + food.calories, 0);\r\n        },\r\n        \r\n        // âœ… È˜terge un aliment consumat din listÄƒ\r\n        removeConsumedFood: (state, action) => {\r\n            const { date, index } = action.payload;\r\n\r\n            if (state.consumedFoods[date]) {\r\n                state.consumedFoods[date].splice(index, 1);\r\n\r\n                // âœ… DacÄƒ nu mai sunt alimente Ã®n ziua respectivÄƒ, È™tergem ziua din listÄƒ\r\n                if (state.consumedFoods[date].length === 0) {\r\n                    delete state.consumedFoods[date];\r\n                }\r\n\r\n                // âœ… ActualizÄƒm totalul caloriilor consumate\r\n                state.consumedCalories = Object.values(state.consumedFoods)\r\n                    .flat()\r\n                    .reduce((total, food) => total + food.calories, 0);\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\n// âœ… Export corect\r\nexport const { setDailyCalories, addConsumedFood, removeConsumedFood } = caloriesSlice.actions;\r\nexport default caloriesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,aAAa,EAAE,CAAC;EAChBC,gBAAgB,EAAE,CAAC;EACnBC,aAAa,EAAE,CAAC,CAAC,CAAE;AACvB,CAAC;AAED,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE;IACN;IACAC,gBAAgB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACP,aAAa,GAAGQ,MAAM,CAACC,OAAO;IACxC,CAAC;IAED;IACAC,eAAe,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEG,IAAI;QAAEP,IAAI;QAAEQ,MAAM;QAAEC;MAAS,CAAC,GAAGL,MAAM,CAACC,OAAO;MAEvD,IAAI,CAACE,IAAI,IAAIG,KAAK,CAAC,IAAIC,IAAI,CAACJ,IAAI,CAAC,CAAC,EAAE;QAChCK,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEN,IAAI,CAAC;QACtD;MACJ;MAEA,MAAMO,aAAa,GAAG,IAAIH,IAAI,CAACJ,IAAI,CAAC,CAACQ,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEhE,IAAI,CAACb,KAAK,CAACL,aAAa,CAACgB,aAAa,CAAC,EAAE;QACrCX,KAAK,CAACL,aAAa,CAACgB,aAAa,CAAC,GAAG,EAAE;MAC3C;MAEAX,KAAK,CAACL,aAAa,CAACgB,aAAa,CAAC,CAACG,IAAI,CAAC;QAAEjB,IAAI;QAAEQ,MAAM;QAAEC;MAAS,CAAC,CAAC;MAEnEN,KAAK,CAACN,gBAAgB,GAAGqB,MAAM,CAACC,MAAM,CAAChB,KAAK,CAACL,aAAa,CAAC,CACtDsB,IAAI,CAAC,CAAC,CACNC,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACd,QAAQ,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED;IACAe,kBAAkB,EAAEA,CAACrB,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAM;QAAEG,IAAI;QAAEkB;MAAM,CAAC,GAAGrB,MAAM,CAACC,OAAO;MAEtC,IAAIF,KAAK,CAACL,aAAa,CAACS,IAAI,CAAC,EAAE;QAC3BJ,KAAK,CAACL,aAAa,CAACS,IAAI,CAAC,CAACmB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;;QAE1C;QACA,IAAItB,KAAK,CAACL,aAAa,CAACS,IAAI,CAAC,CAACoB,MAAM,KAAK,CAAC,EAAE;UACxC,OAAOxB,KAAK,CAACL,aAAa,CAACS,IAAI,CAAC;QACpC;;QAEA;QACAJ,KAAK,CAACN,gBAAgB,GAAGqB,MAAM,CAACC,MAAM,CAAChB,KAAK,CAACL,aAAa,CAAC,CACtDsB,IAAI,CAAC,CAAC,CACNC,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACd,QAAQ,EAAE,CAAC,CAAC;MAC1D;IACJ;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEP,gBAAgB;EAAEI,eAAe;EAAEkB;AAAmB,CAAC,GAAGzB,aAAa,CAAC6B,OAAO;AAC9F,eAAe7B,aAAa,CAAC8B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}