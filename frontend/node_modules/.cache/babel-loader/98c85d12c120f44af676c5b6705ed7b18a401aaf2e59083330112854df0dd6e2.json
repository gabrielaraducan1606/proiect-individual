{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\Summary\\\\Summary.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./Summary.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summary = ({\n  selectedDate\n}) => {\n  _s();\n  const caloriesState = useSelector(state => state.calories) || {};\n  const dailyCaloriesByDate = caloriesState.dailyCaloriesByDate || {};\n  const consumedFoods = caloriesState.consumedFoods || {};\n  let dateObject = selectedDate instanceof Date && !isNaN(selectedDate) ? selectedDate : new Date();\n  const formattedDate = dateObject.toISOString().split(\"T\")[0];\n\n  // ðŸ”¥ VerificÄƒm dacÄƒ `dailyCaloriesByDate` conÈ›ine date pentru ziua selectatÄƒ\n  const dailyCalories = dailyCaloriesByDate.hasOwnProperty(formattedDate) ? dailyCaloriesByDate[formattedDate] : 0;\n  const consumedCalories = (consumedFoods[formattedDate] || []).reduce((total, food) => total + food.calories, 0);\n  const remainingCalories = dailyCalories - consumedCalories;\n  const percentageOfDailyIntake = dailyCalories > 0 ? (consumedCalories / dailyCalories * 100).toFixed(1) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.summaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.summaryTitle,\n      children: [\"Summary for \", dateObject.toLocaleDateString(\"ro-RO\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.summaryList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Calorii r\\u0103mase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), \" \", remainingCalories.toFixed(2), \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Calorii consumate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), \" \", consumedCalories.toFixed(2), \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Calorii zilnice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), \" \", dailyCalories.toFixed(2), \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"% din norm\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), \" \", percentageOfDailyIntake, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Summary, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useSelector","styles","jsxDEV","_jsxDEV","Summary","selectedDate","_s","caloriesState","state","calories","dailyCaloriesByDate","consumedFoods","dateObject","Date","isNaN","formattedDate","toISOString","split","dailyCalories","hasOwnProperty","consumedCalories","reduce","total","food","remainingCalories","percentageOfDailyIntake","toFixed","className","summaryContainer","children","summaryTitle","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","summaryList","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/Summary/Summary.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./Summary.module.css\";\r\n\r\nconst Summary = ({ selectedDate }) => {\r\n    const caloriesState = useSelector((state) => state.calories) || {};\r\n    const dailyCaloriesByDate = caloriesState.dailyCaloriesByDate || {};\r\n    const consumedFoods = caloriesState.consumedFoods || {};\r\n\r\n    let dateObject = selectedDate instanceof Date && !isNaN(selectedDate) ? selectedDate : new Date();\r\n    const formattedDate = dateObject.toISOString().split(\"T\")[0];\r\n\r\n    // ðŸ”¥ VerificÄƒm dacÄƒ `dailyCaloriesByDate` conÈ›ine date pentru ziua selectatÄƒ\r\n    const dailyCalories = dailyCaloriesByDate.hasOwnProperty(formattedDate) ? dailyCaloriesByDate[formattedDate] : 0;\r\n    const consumedCalories = (consumedFoods[formattedDate] || []).reduce((total, food) => total + food.calories, 0);\r\n    const remainingCalories = dailyCalories - consumedCalories;\r\n    const percentageOfDailyIntake = dailyCalories > 0 ? ((consumedCalories / dailyCalories) * 100).toFixed(1) : 0;\r\n\r\n    return (\r\n        <div className={styles.summaryContainer}>\r\n            <h3 className={styles.summaryTitle}>Summary for {dateObject.toLocaleDateString(\"ro-RO\")}</h3>\r\n            <ul className={styles.summaryList}>\r\n                <li><span>Calorii rÄƒmase</span> {remainingCalories.toFixed(2)} kcal</li>\r\n                <li><span>Calorii consumate</span> {consumedCalories.toFixed(2)} kcal</li>\r\n                <li><span>Calorii zilnice</span> {dailyCalories.toFixed(2)} kcal</li>\r\n                <li><span>% din normÄƒ</span> {percentageOfDailyIntake}%</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}