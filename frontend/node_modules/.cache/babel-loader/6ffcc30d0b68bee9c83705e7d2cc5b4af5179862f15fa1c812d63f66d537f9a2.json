{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\pages\\\\CalculatorPage\\\\CalculatorPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./CalculatorPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorPage = () => {\n  _s();\n  const [height, setHeight] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [currentWeight, setCurrentWeight] = useState(\"\");\n  const [desiredWeight, setDesiredWeight] = useState(\"\");\n  const [bloodType, setBloodType] = useState(\"\");\n  const [caloriesAvailable, setCaloriesAvailable] = useState(null);\n  const [caloriesConsumed, setCaloriesConsumed] = useState(0);\n  const [caloriesRemaining, setCaloriesRemaining] = useState(null);\n  const [percentageConsumed, setPercentageConsumed] = useState(0);\n  const [error, setError] = useState(\"\");\n  const calculateCalories = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    // ✅ Verificare dacă toate câmpurile sunt completate\n    if (!height || !age || !currentWeight || !desiredWeight || !bloodType) {\n      setError(\"Please fill in all fields!\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/calories\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          height,\n          age,\n          currentWeight,\n          desiredWeight,\n          bloodType\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"Calculation failed\");\n      }\n      setCaloriesAvailable(data.dailyCalories);\n      setCaloriesRemaining(data.dailyCalories - caloriesConsumed);\n      setPercentageConsumed((caloriesConsumed / data.dailyCalories * 100).toFixed(2));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleCaloriesInput = e => {\n    const value = parseFloat(e.target.value) || 0;\n    setCaloriesConsumed(value);\n    setCaloriesRemaining((caloriesAvailable - value).toFixed(2));\n    setPercentageConsumed((value / caloriesAvailable * 100).toFixed(2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calculatorPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Calculate your daily calorie intake right now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.formContainer,\n      onSubmit: calculateCalories,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Height (cm) *\",\n          value: height,\n          onChange: e => setHeight(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Age *\",\n          value: age,\n          onChange: e => setAge(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Current weight *\",\n          value: currentWeight,\n          onChange: e => setCurrentWeight(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Desired weight *\",\n          value: desiredWeight,\n          onChange: e => setDesiredWeight(e.target.value),\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.bloodTypeContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.bloodTypeLabel,\n            children: \"Blood Type*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: styles.bloodTypeOptions,\n            children: [1, 2, 3, 4].map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"bloodType\",\n                value: type,\n                checked: bloodType === String(type),\n                onChange: e => setBloodType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this)]\n            }, type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Start losing weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.errorMessage,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }, this), caloriesAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.resultContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Calorii zilnice necesare: \", caloriesAvailable]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), caloriesAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.summaryContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sumar Zilnic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Calorii disponibile azi: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: caloriesAvailable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Calorii consumate: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: caloriesConsumed.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Calorii r\\u0103mase: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: caloriesRemaining\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Procentaj consumat: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [percentageConsumed, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Introdu calorii consumate\",\n        onChange: handleCaloriesInput,\n        className: styles.inputField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(CalculatorPage, \"Bl+d9EpFJ8FOPmQN/gZ+tkaSIVY=\");\n_c = CalculatorPage;\nexport default CalculatorPage;\nvar _c;\n$RefreshReg$(_c, \"CalculatorPage\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","CalculatorPage","_s","height","setHeight","age","setAge","currentWeight","setCurrentWeight","desiredWeight","setDesiredWeight","bloodType","setBloodType","caloriesAvailable","setCaloriesAvailable","caloriesConsumed","setCaloriesConsumed","caloriesRemaining","setCaloriesRemaining","percentageConsumed","setPercentageConsumed","error","setError","calculateCalories","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","dailyCalories","toFixed","handleCaloriesInput","value","parseFloat","target","className","calculatorPage","children","title","fileName","_jsxFileName","lineNumber","columnNumber","formContainer","onSubmit","leftColumn","type","placeholder","onChange","inputField","rightColumn","bloodTypeContainer","bloodTypeLabel","bloodTypeOptions","map","name","checked","String","submitButton","errorMessage","resultContainer","summaryContainer","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/pages/CalculatorPage/CalculatorPage.jsx"],"sourcesContent":["import React, { useState } from \"react\"; \r\nimport styles from \"./CalculatorPage.module.css\";\r\n\r\nconst CalculatorPage = () => {\r\n    const [height, setHeight] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [currentWeight, setCurrentWeight] = useState(\"\");\r\n    const [desiredWeight, setDesiredWeight] = useState(\"\");\r\n    const [bloodType, setBloodType] = useState(\"\");\r\n    const [caloriesAvailable, setCaloriesAvailable] = useState(null);\r\n    const [caloriesConsumed, setCaloriesConsumed] = useState(0);\r\n    const [caloriesRemaining, setCaloriesRemaining] = useState(null);\r\n    const [percentageConsumed, setPercentageConsumed] = useState(0);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const calculateCalories = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n\r\n        // ✅ Verificare dacă toate câmpurile sunt completate\r\n        if (!height || !age || !currentWeight || !desiredWeight || !bloodType) {\r\n            setError(\"Please fill in all fields!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/calories\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ height, age, currentWeight, desiredWeight, bloodType }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message || \"Calculation failed\");\r\n            }\r\n\r\n            setCaloriesAvailable(data.dailyCalories);\r\n            setCaloriesRemaining(data.dailyCalories - caloriesConsumed);\r\n            setPercentageConsumed(((caloriesConsumed / data.dailyCalories) * 100).toFixed(2));\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const handleCaloriesInput = (e) => {\r\n        const value = parseFloat(e.target.value) || 0;\r\n        setCaloriesConsumed(value);\r\n        setCaloriesRemaining((caloriesAvailable - value).toFixed(2));\r\n        setPercentageConsumed(((value / caloriesAvailable) * 100).toFixed(2));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.calculatorPage}>\r\n            <h1 className={styles.title}>Calculate your daily calorie intake right now</h1>\r\n\r\n            {/* ✅ Formular */}\r\n            <form className={styles.formContainer} onSubmit={calculateCalories}>\r\n                <div className={styles.leftColumn}>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Height (cm) *\"\r\n                        value={height}\r\n                        onChange={(e) => setHeight(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Age *\"\r\n                        value={age}\r\n                        onChange={(e) => setAge(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Current weight *\"\r\n                        value={currentWeight}\r\n                        onChange={(e) => setCurrentWeight(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n                </div>\r\n\r\n                <div className={styles.rightColumn}>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Desired weight *\"\r\n                        value={desiredWeight}\r\n                        onChange={(e) => setDesiredWeight(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n\r\n                    {/* ✅ Blood Type */}\r\n                    <div className={styles.bloodTypeContainer}>\r\n                        <label className={styles.bloodTypeLabel}>Blood Type*</label>\r\n                        <ul className={styles.bloodTypeOptions}>\r\n                            {[1, 2, 3, 4].map((type) => (\r\n                                <li key={type}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"bloodType\"\r\n                                        value={type}\r\n                                        checked={bloodType === String(type)}\r\n                                        onChange={(e) => setBloodType(e.target.value)}\r\n                                    />\r\n                                    <span>{type}</span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className={styles.submitButton}>\r\n                    Start losing weight\r\n                </button>\r\n            </form>\r\n\r\n            {/* ✅ Mesaj de eroare */}\r\n            {error && <p className={styles.errorMessage}>{error}</p>}\r\n\r\n            {/* ✅ Rezultatul calculului */}\r\n            {caloriesAvailable && (\r\n                <div className={styles.resultContainer}>\r\n                    <h3>Calorii zilnice necesare: {caloriesAvailable}</h3>\r\n                </div>\r\n            )}\r\n\r\n            {/* ✅ Sumarul caloriilor */}\r\n            {caloriesAvailable && (\r\n                <div className={styles.summaryContainer}>\r\n                    <h2>Sumar Zilnic</h2>\r\n                    <p>Calorii disponibile azi: <strong>{caloriesAvailable}</strong></p>\r\n                    <p>Calorii consumate: <strong>{caloriesConsumed.toFixed(2)}</strong></p>\r\n                    <p>Calorii rămase: <strong>{caloriesRemaining}</strong></p>\r\n                    <p>Procentaj consumat: <strong>{percentageConsumed}%</strong></p>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Introdu calorii consumate\"\r\n                        onChange={handleCaloriesInput}\r\n                        className={styles.inputField}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalculatorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}