{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  dailyCaloriesByDate: {},\n  // ðŸ”¥ Store daily calories per day { \"YYYY-MM-DD\": 1800 }\n  consumedFoods: {},\n  // ðŸ”¥ Store food consumed per day { \"YYYY-MM-DD\": [{ food item }] }\n  selectedDate: new Date().toISOString().split(\"T\")[0] // ðŸ”¥ Store selected date\n};\nconst caloriesSlice = createSlice({\n  name: \"calories\",\n  initialState,\n  reducers: {\n    setDailyCalories: (state, action) => {\n      const {\n        date,\n        calories\n      } = action.payload;\n      const formattedDate = new Date(date).toISOString().split(\"T\")[0];\n      if (!state.dailyCaloriesByDate) {\n        state.dailyCaloriesByDate = {};\n      }\n      state.dailyCaloriesByDate[formattedDate] = calories;\n    },\n    setSelectedDate: (state, action) => {\n      state.selectedDate = action.payload;\n    },\n    addConsumedFood: (state, action) => {\n      const {\n        date,\n        name,\n        weight,\n        calories\n      } = action.payload;\n      const formattedDate = new Date(date).toISOString().split(\"T\")[0];\n      if (!state.consumedFoods[formattedDate]) {\n        state.consumedFoods[formattedDate] = [];\n      }\n      state.consumedFoods[formattedDate].push({\n        name,\n        weight,\n        calories\n      });\n    }\n  }\n});\nexport const {\n  setDailyCalories,\n  setSelectedDate,\n  addConsumedFood\n} = caloriesSlice.actions;\nexport default caloriesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","dailyCaloriesByDate","consumedFoods","selectedDate","Date","toISOString","split","caloriesSlice","name","reducers","setDailyCalories","state","action","date","calories","payload","formattedDate","setSelectedDate","addConsumedFood","weight","push","actions","reducer"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/redux/caloriesSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    dailyCaloriesByDate: {}, // ðŸ”¥ Store daily calories per day { \"YYYY-MM-DD\": 1800 }\r\n    consumedFoods: {}, // ðŸ”¥ Store food consumed per day { \"YYYY-MM-DD\": [{ food item }] }\r\n    selectedDate: new Date().toISOString().split(\"T\")[0], // ðŸ”¥ Store selected date\r\n};\r\n\r\nconst caloriesSlice = createSlice({\r\n    name: \"calories\",\r\n    initialState,\r\n    reducers: {\r\n        setDailyCalories: (state, action) => {\r\n            const { date, calories } = action.payload;\r\n            const formattedDate = new Date(date).toISOString().split(\"T\")[0];\r\n\r\n            if (!state.dailyCaloriesByDate) {\r\n                state.dailyCaloriesByDate = {};\r\n            }\r\n            state.dailyCaloriesByDate[formattedDate] = calories;\r\n        },\r\n\r\n        setSelectedDate: (state, action) => {\r\n            state.selectedDate = action.payload;\r\n        },\r\n\r\n        addConsumedFood: (state, action) => {\r\n            const { date, name, weight, calories } = action.payload;\r\n            const formattedDate = new Date(date).toISOString().split(\"T\")[0];\r\n\r\n            if (!state.consumedFoods[formattedDate]) {\r\n                state.consumedFoods[formattedDate] = [];\r\n            }\r\n            state.consumedFoods[formattedDate].push({ name, weight, calories });\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setDailyCalories, setSelectedDate, addConsumedFood } = caloriesSlice.actions;\r\nexport default caloriesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,mBAAmB,EAAE,CAAC,CAAC;EAAE;EACzBC,aAAa,EAAE,CAAC,CAAC;EAAE;EACnBC,YAAY,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;AAC1D,CAAC;AAED,MAAMC,aAAa,GAAGR,WAAW,CAAC;EAC9BS,IAAI,EAAE,UAAU;EAChBR,YAAY;EACZS,QAAQ,EAAE;IACNC,gBAAgB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEC,IAAI;QAAEC;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MACzC,MAAMC,aAAa,GAAG,IAAIZ,IAAI,CAACS,IAAI,CAAC,CAACR,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEhE,IAAI,CAACK,KAAK,CAACV,mBAAmB,EAAE;QAC5BU,KAAK,CAACV,mBAAmB,GAAG,CAAC,CAAC;MAClC;MACAU,KAAK,CAACV,mBAAmB,CAACe,aAAa,CAAC,GAAGF,QAAQ;IACvD,CAAC;IAEDG,eAAe,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACR,YAAY,GAAGS,MAAM,CAACG,OAAO;IACvC,CAAC;IAEDG,eAAe,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEC,IAAI;QAAEL,IAAI;QAAEW,MAAM;QAAEL;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MACvD,MAAMC,aAAa,GAAG,IAAIZ,IAAI,CAACS,IAAI,CAAC,CAACR,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEhE,IAAI,CAACK,KAAK,CAACT,aAAa,CAACc,aAAa,CAAC,EAAE;QACrCL,KAAK,CAACT,aAAa,CAACc,aAAa,CAAC,GAAG,EAAE;MAC3C;MACAL,KAAK,CAACT,aAAa,CAACc,aAAa,CAAC,CAACI,IAAI,CAAC;QAAEZ,IAAI;QAAEW,MAAM;QAAEL;MAAS,CAAC,CAAC;IACvE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,gBAAgB;EAAEO,eAAe;EAAEC;AAAgB,CAAC,GAAGX,aAAa,CAACc,OAAO;AAC3F,eAAed,aAAa,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}