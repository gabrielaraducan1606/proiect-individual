{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitag\\\\Documents\\\\GitHub\\\\proiect-individual-front-end\\\\frontend\\\\src\\\\components\\\\Summary\\\\Summary.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./Summary.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFormattedDate = date => {\n  if (!(date instanceof Date)) {\n    date = new Date(date); // ✅ Convert to Date object\n  }\n  return date.toLocaleDateString(\"ro-RO\", {\n    day: \"2-digit\",\n    month: \"2-digit\",\n    year: \"numeric\"\n  });\n};\nconst Summary = ({\n  selectedDate\n}) => {\n  _s();\n  const {\n    dailyCalories = 0,\n    consumedFoods = {}\n  } = useSelector(state => state.calories || {});\n  const formattedDate = selectedDate instanceof Date ? selectedDate.toISOString().split(\"T\")[0] : new Date(selectedDate).toISOString().split(\"T\")[0];\n  const consumedCalories = (consumedFoods[formattedDate] || []).reduce((total, food) => total + food.calories, 0);\n  const remainingCalories = dailyCalories - consumedCalories;\n  const percentageOfDailyIntake = dailyCalories > 0 ? (consumedCalories / dailyCalories * 100).toFixed(1) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.summaryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.summaryTitle,\n      children: [\"Summary for \", getFormattedDate(selectedDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.summaryList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), \" \", remainingCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Consumed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), \" \", consumedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Daily Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), \" \", dailyCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"% of normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), \" \", percentageOfDailyIntake, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Summary, \"HouUyJJ7dnCjw5qmQZL2n9uqfsA=\", false, function () {\n  return [useSelector];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useSelector","styles","jsxDEV","_jsxDEV","getFormattedDate","date","Date","toLocaleDateString","day","month","year","Summary","selectedDate","_s","dailyCalories","consumedFoods","state","calories","formattedDate","toISOString","split","consumedCalories","reduce","total","food","remainingCalories","percentageOfDailyIntake","toFixed","className","summaryContainer","children","summaryTitle","fileName","_jsxFileName","lineNumber","columnNumber","summaryList","_c","$RefreshReg$"],"sources":["C:/Users/nitag/Documents/GitHub/proiect-individual-front-end/frontend/src/components/Summary/Summary.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./Summary.module.css\";\r\n\r\nconst getFormattedDate = (date) => {\r\n    if (!(date instanceof Date)) {\r\n        date = new Date(date); // ✅ Convert to Date object\r\n    }\r\n    return date.toLocaleDateString(\"ro-RO\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n    });\r\n};\r\n\r\nconst Summary = ({ selectedDate }) => {\r\n    const { dailyCalories = 0, consumedFoods = {} } = useSelector((state) => state.calories || {});\r\n    const formattedDate = selectedDate instanceof Date ? selectedDate.toISOString().split(\"T\")[0] : new Date(selectedDate).toISOString().split(\"T\")[0];\r\n\r\n    const consumedCalories = (consumedFoods[formattedDate] || []).reduce((total, food) => total + food.calories, 0);\r\n    const remainingCalories = dailyCalories - consumedCalories;\r\n    const percentageOfDailyIntake = dailyCalories > 0 ? ((consumedCalories / dailyCalories) * 100).toFixed(1) : 0;\r\n\r\n    return (\r\n        <div className={styles.summaryContainer}>\r\n            <h3 className={styles.summaryTitle}>Summary for {getFormattedDate(selectedDate)}</h3>\r\n            <ul className={styles.summaryList}>\r\n                <li><span>Left</span> {remainingCalories} kcal</li>\r\n                <li><span>Consumed</span> {consumedCalories} kcal</li>\r\n                <li><span>Daily Rate</span> {dailyCalories} kcal</li>\r\n                <li><span>% of normal</span> {percentageOfDailyIntake}%</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}